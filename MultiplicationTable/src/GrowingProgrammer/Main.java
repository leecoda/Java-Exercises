package GrowingProgrammer;

public class Main {

    public static void main(String[] args) {
	/*
	思路分析
	1. 打印一行表格（9 cells）
	每个cell里面都是 1 * 1 = 1
	2. 将表格复制，成为9层的一个矩形(9 * 9)
	3. 将表格变成一个直角三角形，第一行1个等式，第二行2个等式，第三行3个等式，第四行。。。。第9行9个
	也就是说，行数和打印的次数是一致的，j<=i
	4. 仔细观察99乘法表，第一个乘数其实是列数j，第二个乘数其实是行数i，得数就是两者的乘积，修改一下打印即可得出
	5. 优化：因为两位数占位问题，打印出来的几个表格没有对齐（如下），所以要加一个筛选条件，让他们对齐
	1 * 1 = 1
    1 * 2 = 2    2 * 2 = 4
    1 * 3 = 3    2 * 3 = 6    3 * 3 = 9
    1 * 4 = 4    2 * 4 = 8    3 * 4 = 12    4 * 4 = 16
    1 * 5 = 5    2 * 5 = 10    3 * 5 = 15    4 * 5 = 20    5 * 5 = 25
    1 * 6 = 6    2 * 6 = 12    3 * 6 = 18    4 * 6 = 24    5 * 6 = 30    6 * 6 = 36
    1 * 7 = 7    2 * 7 = 14    3 * 7 = 21    4 * 7 = 28    5 * 7 = 35    6 * 7 = 42    7 * 7 = 49
    1 * 8 = 8    2 * 8 = 16    3 * 8 = 24    4 * 8 = 32    5 * 8 = 40    6 * 8 = 48    7 * 8 = 56    8 * 8 = 64
    1 * 9 = 9    2 * 9 = 18    3 * 9 = 27    4 * 9 = 36    5 * 9 = 45    6 * 9 = 54    7 * 9 = 63    8 * 9 = 72    9 * 9 = 81
	 */
    /*
    这里面还有一个问题就是9*9后面还是打印了好多空格，也是可以通过if语句去除这几个空格的，把那个打印空格的相通的部分再放进那个if框里面去，然后再9*9的
    部分不要放空格。这个要不要加上就看需求。
     */
        for(int i = 1; i <= 9 ; i++) {
            for(int j = 1; j <= i; j++) {
                if(j == 3 && i <= 4) {
                    System.out.print(" " + j + " * " + i + " = " + (j * i));
                } else {
                    System.out.print(j + " * " + i + " = " + (j * i));
                }
                System.out.print("    ");
                //if里面相同的部分是可以提取出来的
            }
            System.out.println("");
        }

    }
}
//上面这个还是用的化繁为简的办法做的，我第一步打印的是一行，而不是直接打印一个矩形，是因为，我这次打印的单位不是一个星星或者一组星星
//我打印的是一个计算式，如果把9个全部打印出来其实很很麻烦的，所以先打印一行，然后复制成一个矩形会比较好

