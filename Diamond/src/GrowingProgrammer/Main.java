package GrowingProgrammer;
import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
	/*
	思路分析：
	1. 打印一个正方形(9*9)
	*********
    *********
    *********
    *********
    *********
    *********
    *********
    *********
    *********
    *********
	2. 打印两条柱子
	3. 加上两个盖子
	*********
    *       *
    *       *
    *       *
    *       *
    *       *
    *       *
    *       *
    *********

    4. 打印菱形的一条边，已经有星号打印好了，（1，5）和（5，1），还有一些点（2，4），（3，3）（4，2）
    *********
    *  *    *
    * *     *
    **      *
    *       *
    *       *
    *       *
    *       *
    *********
    5. 打印另一条菱形边，已经有星号打印好了，（1，5）和（5，9），还有一些点（2，6）（3，7）（4，8）
    *********
    *  * *  *
    * *   * *
    **     **
    *       *
    *       *
    *       *
    *       *
    *********
    6. 打印左下的一条菱形边，已经有星号打好了，（5，1）和（9，5），还有一些点（6，2）（7，3）（8，4）
    *********
    *  * *  *
    * *   * *
    **     **
    *       *
    **      *
    * *     *
    *  *    *
    *********

    7. 打印右下角的一条菱形边，已经有星号打印好了，（9，5）和（5，9），还有一些点（6，8）（7，7）（8，6）
    *********
    *  * *  *
    * *   * *
    **     **
    *       *
    **     **
    * *   * *
    *  * *  *
    *********

    8. 擦去边角，留四个顶点（1，5）（5，1）（9，5）（5，9）

    9. 先死后活，把层数提取出来,这样改一次代码就能打印出不同层级的菱形

    10.设定为用户输入一个层级数字，必须是奇数，且必须大于3（这个最小数是我经过测试得出来的）
    11.把上面的数字加入一个筛选条件，如果不符合条件就输入，invalid value，并且结束循环
	 */
        Scanner myScanner = new Scanner(System.in);
        System.out.println("Please input an odd number (larger than or equals to 3) as the number of printing layers of the diamond:");
        int n = myScanner.nextInt();

        for(int i = 1; i <= n; i++) {
            if(n % 2 == 0 || n < 3) {
                System.out.println("Invalid value");
                break;
            }
            for(int j = 1; j <= n; j++) {
                if((i == 1 && j == (n + 1) / 2) || (i == (n + 1) / 2 && j == 1) || (i == n && j == (n + 1) / 2) || (i == ( n + 1) / 2 && j == n)  || j == (n + 1) / 2 - i + 1 || j == (n + 1 ) / 2 - 1 + i || j == i + 1 - ((n + 1) / 2) || j == (n + 1) / 2 + n - i) {
                    System.out.print("*");
                } else {
                    System.out.print(" ");
                }
            }
            System.out.println("");
        }
    }
}
